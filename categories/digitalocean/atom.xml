<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Digitalocean | Bits, Bytes, and Words]]></title>
  <link href="https://blog.jez.io/categories/digitalocean/atom.xml" rel="self"/>
  <link href="https://blog.jez.io/"/>
  <updated>2015-08-03T03:25:14-04:00</updated>
  <id>https://blog.jez.io/</id>
  <author>
    <name><![CDATA[Jake Zimmerman]]></name>
    <email><![CDATA[jake@zimmerman.io]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Running a VPS, Log 3: A Mail Server That Works... Kind Of.]]></title>
    <link href="https://blog.jez.io/2014/07/04/running-a-vps-log-3/"/>
    <updated>2014-07-04T14:11:14-04:00</updated>
    <id>https://blog.jez.io/2014/07/04/running-a-vps-log-3</id>
    <content type="html"><![CDATA[<p>After some initial troubles, I finally managed to get basic send and receive functionality  working on my mail server, using EncFS, Dovecot, and Postfix. That being said, it&rsquo;s <em>far</em> from a perfect system, and it needs a good deal more TLC to get it working at a level that&rsquo;s on par with a more &ldquo;professional&rdquo; email service provider. This post details some fixes that I&rsquo;ve implemented so far, as well as the functionality that I&rsquo;ve managed to get working.</p>

<!-- more -->


<h2>EncFS Troubles Revisited</h2>

<p>I mentioned in my <a href="/2014/06/24/running-a-vps-log-2">last log</a> that I had somehow managed to botch my first mail server-related endeavor: installing EncFS, a program for creating encrypted file systems. The way it&rsquo;s supposed to work is depicted below:</p>

<p><a class="image-link" href="/images/encfs.svg"><img src="/images/encfs.svg"></a></p>

<p>Emails originating elsewhere are transfered over the internet to my server according to the DNS settings we&rsquo;ve put in place. These emails need to be stored somewhere upon their receipt; ideally, somewhere encrypted. Thus, the goal is to set up an encrypted file system in user space, such that each incoming email is first stored in <code>/decrypted-mail/</code>, and then is automatically encrypted and stored in <code>/encrypted-mail/</code>. (<strong>Note</strong>: this is not quite how the encryption process works. For more information, you should check out the <a href="https://wiki.archlinux.org/index.php/EncFS">Arch Wiki</a> page on EncFS.)</p>

<p>There are some disadvantages to this type of encryption, most notably that it leaks information about the file system itself. However, as was mentioned in the comments on the <a href="http://sealedabstract.com/code/nsa-proof-your-e-mail-in-2-hours/">tutorial I&rsquo;m working from</a>, &ldquo;if the host/harddisk is given to authorities they cannot decrypt it and thus cannot access your e-mails,&rdquo; which is good enough for me.</p>

<h3>Upgrading the Kernel</h3>

<p>After following the instructions from the tutorial perfectly, <em>and</em> repeating them after having restored from a clean backup, EncFS refused to work. Luckily, I found this <a href="https://github.com/al3x/sovereign/issues/147#issuecomment-43849647">GitHub issue</a> detailing the source of the problem as well as a simple fix for it.</p>

<p>Apparently, my issue was that DigitalOcean doesn&rsquo;t initialize freshly created Debian 7 droplets with the most recent kernel. Unfortunately libfuse, a library used by EncFS to create and manage the encrypted file system, was expecting a more up-to-date kernel version.</p>

<p>Upgrading my kernel version was just a few steps, though. I had to run
<figure class='code'><figcaption><span>Upgrade Kernel </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'><span class="nv">$ </span>sudp apt-get upgrade
</span></code></pre></td></tr></table></div></figure>
to update the list of downloaded kernels, then
<figure class='code'><figcaption><span>Restart </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo shutdown -h now
</span></code></pre></td></tr></table></div></figure>
to tell the server to shutdown and power off. Next up is to switch over the kernel version on the <a href="https://www.digitalocean.com/community/tutorials/how-to-update-a-digitalocean-server-s-kernel-using-the-control-panel">DigitalOcean control panel</a>. All in all, nothing too difficult: the hardest part was that I never expected my problem to have anything to do with DigitalOcean.</p>

<h2>Postfix &amp; Dovecot</h2>

<p>With EncFS finally up and running, I moved on to getting the basic send and receive functionality implemented. For the most part, this process was straight-forward, and is outlined (albeit very scarcely) <a href="http://sealedabstract.com/code/nsa-proof-your-e-mail-in-2-hours/">here</a>.</p>

<p>Then suddenly, the tutorial proclaimed, &ldquo;At this point, it should basically work. You should be able to send and receive mail.&rdquo; I was pretty surprised: I had no idea how to actually go about testing my setup! It simply did not list any way of doing this. It turns out, there are basically three ways to establish a connection with the mail server; I&rsquo;ll discuss the first here, and the others in a [future post][/2014/06/24/running-a-vps-log-4] on troubleshooting problems with my setup.</p>

<h3>Mail Client</h3>

<p>For the true hackers who don&rsquo;t make mistakes and set up their systems perfectly on their first try, simply launching a desktop or mobile mail client and configuring a few account settings, should be enough. Since I&rsquo;m developing on a Mac and was too lazy to install a fancier, potentially more feature-rich client, I&rsquo;m using Mail.app.</p>

<p>A series of dialogs should drive the process of setting up a new user account. My Mail.app setup is shown below.</p>

<p><a class="image-link" href="/images/imap-settings.png"><img src="/images/imap-settings.png"></a></p>

<p>IMAP on my setup works fine, so I&rsquo;ll give some pointers about setting it up correctly:</p>

<ul>
<li><strong>Email Address</strong> or <strong>Username</strong>: Fields that ask for this information should always include a full email address&ndash;in my case <code>jake@zimmerman.io</code>. This is because our MySQL server is configured to store the full address, so Dovecot needs a full address to use to for IMAP authentication.</li>
<li><strong>Password</strong>: This is the password coupled with the email address referenced above, which was SHA512-hashed and stored in the database.</li>
<li><strong>Incoming</strong> or <strong>IMAP Mail Server</strong>: Whatever is in this field needs to eventually resolve to the IP address of our IMAP server. Simply putting the server&rsquo;s IP address directly into this field will suffice. To be more sophisticated though, we&rsquo;ll want to configure this field with a domain name and let our client resolve it, as this is more robust. There are a few ways this can be done; to give a quick overview, you can either set up

<ul>
<li>a CNAME record which resolves to the mail server&rsquo;s IP.</li>
<li>an MX record on the <code>@</code> or apex domain which resolves to the mail server&rsquo;s IP. (This is the option depicted in the screenshot above).</li>
<li>an A record which resolves directly to the mail server&rsquo;s IP.</li>
</ul>
</li>
<li><strong>Port</strong>: 993. We&rsquo;ve configured our server to use SSL to connect over IMAPS, which runs by default over port 993. Be sure to check &ldquo;Use SSL&rdquo; if such an option is available.</li>
</ul>


<p>As far as SMTP goes, this is where my setup starts breaking. I&rsquo;ll come back to why exactly it&rsquo;s failing in more detail <a href="/2014/07/05/running-a-vps-log-4">here</a>, but for now, know that I had to change the line <code>smtpd_tls_auth_only = yes</code> in <code>/etc/postfix/main.cf</code> to <code>... = no</code>, to even get things to work. With this line enabled, credentials are sent over the wire in plain text. Sadly, crypto is hard, and this is the only thing that I have done to manage to get it working.</p>

<p>At this point I could connect to the server &ldquo;zimmerman.io&rdquo; on port 25 using my email with the <em>same</em> password from above. As a side note, this form of authentication is pretty nifty. If you noticed, we&rsquo;re using the same password on IMAP with Dovecot and on SMTP with Postfix. Using the SASL protocol, Postfix can pass on the user&rsquo;s credentials to Dovecot, which then uses its connection to the database to confirm or deny the request for authentication. For a simple, one-user setup, this is a rather elegant solution.</p>

<h2>Debugging a Broken Mail Server</h2>

<p>With SSL authentication turned off, I was able to get Mail.app to send and receive emails. Additionally, I could do the same using the third-party Android client myMail. For whatever reason, the default Android client wouldn&rsquo;t even accept my IMAP login, whereas myMail was smart enough to log me after only asking for my email and password.</p>

<p>Ideally, I&rsquo;d like to have a setup where my password isn&rsquo;t being sent in a format anyone can read. To debug some of these close-to-the-system settings, there are a bunch of <a href="/2014/07/05/running-a-vps-log-4">command line tools</a> which help to inspect exactly what&rsquo;s going wrong with the system.</p>

<p>- - - - -
<br>
### Jake on the Web
<a class="image-link" href="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg"><img class="left" src="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg" width="135" height="135"></a>
If you cared enough to read that far, you should consider following me on
[GitHub][g] or paying a visit to [my homepage][h]. If this post was about one of
my open source projects, make sure to star it on GitHub! I love hearing what
people think, so feel free to comment, open an issue, or send me an email.
 [g]: https://www.github.com/jez/
 [h]: https://jez.io/
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running a VPS, Log 2: Seriously, Back It Up]]></title>
    <link href="https://blog.jez.io/2014/06/24/running-a-vps-log-2/"/>
    <updated>2014-06-24T23:11:14-04:00</updated>
    <id>https://blog.jez.io/2014/06/24/running-a-vps-log-2</id>
    <content type="html"><![CDATA[<p>I don&rsquo;t have the best track record with configuring servers. I&rsquo;ve certainly brought down a ScottyLabs server or two before, but sometimes there&rsquo;s no avoiding that in the sake of learning. At times like these, you&rsquo;ve just gotta reboot and try again. With DigitalOcean&rsquo;s auto-backups though, this process is incredibly easy.</p>

<!-- more -->


<h2>EncFS Troubles</h2>

<p>As part of my eventual goal of hosting my own mail, I tried following <a href="//sealedabstract.com/code/nsa-proof-your-e-mail-in-2-hours/">this post</a> to set up a mail server on my VPS. Unfortunately, I never even made it out the gates. The first step is to install and set up EncFS for letting you mount encrypted filesystems, which the tutorial was planning on using to store email securely. Unfortunately, after following the steps listed to a T, my poor VPS whined and complained about being misconfigured.</p>

<p><strong>Edit</strong>: After doing a little more research, I found that the root of my issue wasn&rsquo;t something I had been doing. Apparently, you have to <a href="https://www.digitalocean.com/community/tutorials/how-to-update-a-digitalocean-server-s-kernel-using-the-control-panel">manually update the kernel</a> through the DigitalOcean web console. You can read more about it on this <a href="https://github.com/al3x/sovereign/issues/147#issuecomment-43849647">GitHub issue</a>.</p>

<p>Regardless, my first attempt to do something cool on this new VPS was a dud. All I had to show for it was a muddled, no-longer-pristine VPS with some packages and libraries that simply didn&rsquo;t work. If I were to continue with the tutorial by skipping this step, I would have never known whether the cause of any future issue was something misconfigured at this step.</p>

<h2>The Day is Saved</h2>

<p>But then I remembered: DigitalOcean is automatically backing up my droplet! After logging into the web interface, all I had to do was click a button and my whole system was reset to the way it looked 24 hours prior. It was <em>actually that easy</em>.</p>

<p>Thus, for anyone getting started with a new server, whether it be on DigitalOcean or any other service (even a box you have running in your room), I cannot stress enough the value of automatic&ndash;or at least regular&ndash;backups. Not only is this a good idea to preserve data in the event of an outage, but it lends a seemingly unbounded ability to mess around and tinker.</p>

<p>What this means is that you get all the fun of learning cool, new Linux-y things, but without ever having to worry about whether you&rsquo;ll break the whole system. Sure, this mindset isn&rsquo;t necessarily the best to adopt for a production machine, but for my circumstances, all I want is free reign to experiment and break things to my heart&rsquo;s content.</p>

<h2>Back to Square One</h2>

<p>With my first attempt at installing a mail server foiled, I think for my next attempt I&rsquo;ll try a different path. Instead of installing and configuring everything more or less manually (I really wanted to do this for the experience of it all, learning the nitty-gritty of how it works), this time around I think I&rsquo;m going to give <a href="https://github.com/al3x/sovereign">sovereign</a> a try. I&rsquo;ve heard good things, and it is in fact based on the original tutorial I had found, so it&rsquo;s looking pretty promising as of yet.</p>

<p>Whatever happens though, I&rsquo;m feeling pretty good about the fact that I can turn things around with a single click.</p>

<p>- - - - -
<br>
### Jake on the Web
<a class="image-link" href="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg"><img class="left" src="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg" width="135" height="135"></a>
If you cared enough to read that far, you should consider following me on
[GitHub][g] or paying a visit to [my homepage][h]. If this post was about one of
my open source projects, make sure to star it on GitHub! I love hearing what
people think, so feel free to comment, open an issue, or send me an email.
 [g]: https://www.github.com/jez/
 [h]: https://jez.io/
</p>
]]></content>
  </entry>
  
</feed>
