<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Summer Projects | Bits, Bytes, and Words]]></title>
  <link href="https://blog.jez.io/categories/summer-projects/atom.xml" rel="self"/>
  <link href="https://blog.jez.io/"/>
  <updated>2015-08-20T02:32:46-04:00</updated>
  <id>https://blog.jez.io/</id>
  <author>
    <name><![CDATA[Jake Zimmerman]]></name>
    <email><![CDATA[jake@zimmerman.io]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Running a VPS, Log 5: It's Not You, It's Me]]></title>
    <link href="https://blog.jez.io/2014/07/10/running-a-vps-log-5/"/>
    <updated>2014-07-10T16:48:43-04:00</updated>
    <id>https://blog.jez.io/2014/07/10/running-a-vps-log-5</id>
    <content type="html"><![CDATA[<p>It is with great sadness that I announce today that I am breaking up with my mail server. At least for a little while, that is. Let&rsquo;s say we&rsquo;re &ldquo;taking a break&rdquo; to &ldquo;see other people.&rdquo;</p>

<!-- more -->


<blockquote><p>I&rsquo;m sorry to say so<br>
but, sadly, it&rsquo;s true<br>
that Bang-ups<br>
and Hang-ups<br>
can happen to you.<br></p>

<p>Dr. Seuss</p></blockquote>

<h2>Don&rsquo;t get me wrong, we&rsquo;ve had a great run</h2>

<p>I&rsquo;ve learned so much from this foray into system administration and mail servers. I&rsquo;ve written about some of these experiences, and yet many more will go unwritten. I&rsquo;ve learned to persevere, to persist, and to have patience. I&rsquo;ve learned to dig deeper, to follow the clues, and to ask for help.</p>

<p>If asked whether I would do it all again, I would say yes in a heartbeat. Even knowing what I know now, I&rsquo;m sure that I would screw everything up all over again. Even still, this whole experience has given me the opportunity to plunge into a whole new sphere of discovery, affording me such immense and immersive exposure that would be too much to turn down given a second chance.</p>

<p>If asked whether I would recommend it to a friend, I would flinch for a second, but undoubtedly answer yes in the end. Sure, there are gentler introductions to some of the sysadmin roles I assumed for this project, and there are certainly more glamorous projects for a beginner which yield immediate and visible results, results that can be shown off and shared.</p>

<p>That being said, few projects lend such a sense of belonging in a community, such a sense of having begun a &ldquo;rite of passage,&rdquo; as hosting your own mail. For one thing, <strong>it&rsquo;s hard</strong>. Trying to mangle to your will the archaic technologies involved in serving mail bend is perhaps one of the most complicated and intensive feats which can be contained under the category of personal VPS projects. More than that, being able to say, &ldquo;This mail is mine, for me, and only me,&rdquo; is an incredibly rewarding yet private experience. It&rsquo;s something no one can take away, something no one can intrude upon.</p>

<h2>But I&rsquo;m just not ready for this kind of commitment</h2>

<p>I initially thought this project would take 3 days, perhaps a week tops, given that the original title of the tutorial was <a href="http://sealedabstract.com/code/nsa-proof-your-e-mail-in-2-hours/">&ldquo;NSA-Proof Your Email <strong>in 2 Hours</strong>&rdquo;</a>. Somehow, this endeavor has managed to encompass fully two and a half weeks. I&rsquo;m not saying that I&rsquo;ve been working exclusively on this project for that time, and I&rsquo;ve certainly been learning a great deal, but I can feel the marginal returns diminishing as time marches ever forward. As much as I hate to admit it, <strong>the summer is already half-way over</strong> for CMU students, and there are still so many technologies, projects, and gadgets that I want to sink my teeth into.</p>

<p>Another remark about &ldquo;being a sysadmin&rdquo;: it&rsquo;s stressful! I would be working on fixing something while ssh&#8217;ed in to my droplet, and I could see the stream of spammers and attackers trying to get through on random ports. While I had the appropriate firewall protections in place, it&rsquo;s thoughts like these that making falling asleep harder: &ldquo;What if I&rsquo;ve missed something? What if my system is critically vulnerable? How long do I have before everything comes crashing down?&rdquo; Stress culture aside, this is not a weight I want to shoulder regularly.</p>

<h2>Do you think we can still be friends?</h2>

<p>Ultimately, I had to make the choice to put this project on the back burner. That does not mean, however, that its flame has been snuffed entirely. This project has been incredibly rewarding, and I&rsquo;m still crazy-determined to get this system working. I mentioned before how &ldquo;privately rewarding&rdquo; it can be to serve one&rsquo;s own mail&ndash;I&rsquo;ve as of yet only had a taste of this goal, and I will return one day to reap it&rsquo;s full rewards. When this day will be, though, I&rsquo;m not sure.</p>

<p><br></p>

<div style="text-align: right;"><h4>Farewell.</h4></div>


<hr />

<p>If you&rsquo;ve been following along this series and you&rsquo;ve tragically decided to follow a similar path as that which I have followed, feel free to chat me up about it! I&rsquo;d be more than happy to offer some support, or give you advice on some resources to look at. I can&rsquo;t say that I&rsquo;ll answer every question, else I would have a working system, but hopefully I have managed to scrounge up something to make your life easier. See below for ways to get in touch.</p>

<p>- - - - -
<br>
### Jake on the Web
<a class="image-link" href="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg"><img class="left" src="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg" width="135" height="135"></a>
If you cared enough to read that far, you should consider following me on
[GitHub][g] or paying a visit to [my homepage][h]. If this post was about one of
my open source projects, make sure to star it on GitHub! I love hearing what
people think, so feel free to comment, open an issue, or send me an email.
 [g]: https://www.github.com/jez/
 [h]: https://jez.io/
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running a VPS, Log 4: Debugging a Broken Mail Server]]></title>
    <link href="https://blog.jez.io/2014/07/07/running-a-vps-log-4/"/>
    <updated>2014-07-07T01:08:00-04:00</updated>
    <id>https://blog.jez.io/2014/07/07/running-a-vps-log-4</id>
    <content type="html"><![CDATA[<p>Whereas the tutorial I&rsquo;m following to setup this mail server initially promised a working setup in more or less two hours, it&rsquo;s nearing two weeks for me and I&rsquo;ve still got plenty of issues. In this log, I&rsquo;ll discuss some of the tools, log files, and online resources which I&rsquo;ve found helpful, as well as give a description of my problem as I best understand it.</p>

<!-- more -->


<h3><code>telnet</code></h3>

<p>As I mentioned in my <a href="/2014/07/04/running-a-vps-log-3">last log</a>, I&rsquo;ve been using three basic tools to connect to and test my mail server. While a graphical client might have a few tools for debugging a faulty connection&ndash;Mail.app&rsquo;s <a href="http://support.apple.com/kb/PH14945">Connection Doctor</a> comes to mind&ndash;they don&rsquo;t usually afford full control to the debugger.</p>

<p>This is where some truly powerful command line tools come into play, the first of which is <code>telnet</code>. Telnet opens up a text-based communication channel between you and a server; once connected, you can ask the server anything. SMTP is the broken part of my server, so I&rsquo;ll focus exclusively on examples dealing with connecting on SMTP ports. That being said, these tools are meant to be general purpose and should work for any type of service or port you can think of which exposes a textual interface.</p>

<p>On a working mail server, we should be able to have the following dialog with the server:</p>

<p><figure class='code'><figcaption><span>telnet </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ telnet mail.zimmerman.io 25
</span><span class='line'>  Trying 107.170.7.111&hellip;
</span><span class='line'>  Connected to metagross.zimmerman.io.
</span><span class='line'>  Escape character is &lsquo;^]&rsquo;.
</span><span class='line'>  220 ************************************&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;blockquote>&lt;p>EHLO [206.71.229.162]
</span><span class='line'>  250-metagross
</span><span class='line'>  250-PIPELINING
</span><span class='line'>  250-SIZE 10240000
</span><span class='line'>  250-VRFY
</span><span class='line'>  250-ETRN
</span><span class='line'>  250-XXXXXXXA
</span><span class='line'>  250-ENHANCEDSTATUSCODES
</span><span class='line'>  250-8BITMIME
</span><span class='line'>  250-STARTTLS
</span><span class='line'>  250 DSN&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></p></blockquote>

<p>A few notes:</p>

<ul>
<li>The first two characters of each line follow this legend:

<ul>
<li><code>$</code> indicates a line entered at the bash REPL</li>
<li><code>&gt;</code> indicates a line entered and sent to the server</li>
<li>all other lines are responses from the server</li>
</ul>
</li>
<li><code>telnet</code> by default takes two arguments: a domain/IP address, and a port number.</li>
<li><code>EHLO</code> is an SMTP command asking the server to identify itself and list which subset of commands it will respond to.</li>
</ul>


<p>From here, we can use commands like <code>MAIL from: &lt;address&gt;</code>, <code>RCPT to: &lt;address&gt;</code>, and <code>DATA</code> to send an email, using only plain text SMTP commands. Pretty powerful. There are also commands to initiate an encrypted connection (using <code>STARTTLS</code>), authenticate a user (using <code>AUTH</code>), and <a href="http://www.port25.com/how-to-check-an-smtp-connection-with-a-manual-telnet-session-2/">more</a>.</p>

<p>Earlier I said that one thing we can discern from the server&rsquo;s <code>EHLO</code> response is what types of commands it will respond to. I also mentioned that this particular dialog would occur with a <em>working</em> mail server. Sneak peak of a problem I&rsquo;m having: I can&rsquo;t get <code>250-STARTTLS</code> to appear in my server&rsquo;s response. We&rsquo;ll come back to this.</p>

<h3>OpenSSL&rsquo;s &nbsp; <code>s_client</code></h3>

<p>The second command line utility that is useful in debugging a mail server, especially those where SSL/TLS encryption is involved, is provided by OpenSSL. OpenSSL exposes a variety of commands, one of which, <code>s_client</code>, aids with establishing an encrypted connection between you and a server.</p>

<p>The syntax of the command looks like this:</p>

<p><figure class='code'><figcaption><span>s_client </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ openssl s_client -connect &lt;host>:&lt;port> [options]</span></code></pre></td></tr></table></div></figure></p>

<p>This client becomes particularly important, because one Postfix option I&rsquo;ve specified in the file <code>/etc/postfix/main.cf</code> is <code>smtpd_tls_auth_only = yes</code>. What this means is that Postfix won&rsquo;t send the line <code>250-AUTH PLAIN LOGIN</code> unless we&rsquo;re running on a secure connection. Merely using <code>telnet</code> to connect on port 25 will not initiate a secure connection.</p>

<p>There are a couple of ways we can use <code>s_client</code> to start off this encryption. The first way is to use port 465 to connect using sSMTP: <code>$ openssl s_client -connect mail.zimmerman.io:465</code>. We could also connect to port 25 and then immediately initiate an encrypted connection by issuing the STARTTLS command: <code>$ openssl s_client mail.zimmerman:25 -starttls smtp</code>. Either way, we get an encrypted connection to our server, and now the line <code>250-AUTH PLAIN LOGIN</code> line will appear in the server&rsquo;s <code>EHLO</code> response. We can continue sending SMTP commands just as with <code>telnet</code>.</p>

<h2>The Problems Set In</h2>

<p>If there&rsquo;s one thing I&rsquo;ve learned about mail servers, it&rsquo;s that they&rsquo;re hard. Like, they&rsquo;re really hard.</p>

<p>The problems first set in when I tried to test my setup with Mail.app. For whatever reason, no combination of settings would let me send mail through my server. I opened the logs located at <code>/var/log/syslog</code> and <code>/var/log/mail.log</code> to see if I could discern what was going on, but nothing showed up. After a bit of Googling, I found some information on how to use the above tools and started to diagnose my problem.</p>

<p>After using them for a little bit, I had the following diagnostic list of things I could and could not do:</p>

<ul>
<li>I could connect to port 25 using <code>telnet</code> (<code>telnet mail.zimmerman.io 25</code>)&hellip;

<ul>
<li>&hellip; but neither <code>STARTTLS</code> nor <code>AUTH</code> appeared in the <code>EHLO</code> response, so I couldn&rsquo;t send emails.</li>
</ul>
</li>
<li>I could not connect to port 465 nor port 587 using neither <code>telnet</code> nor <code>s_client</code>

<ul>
<li><code>telnet</code> simply aborted telling me that my connection had been refused, whereas <code>openssl</code> at least gave me an error number: <code>connect:errno=61</code></li>
</ul>
</li>
</ul>


<p><a class="image-link" href="/images/smtp-connection-refused-1.png"><img src="/images/smtp-connection-refused-1.png"></a></p>

<ul>
<li>I could connect to port 25 using <code>telnet</code> <strong>from my server</strong> (<code>telnet localhost 25</code> after ssh&#8217;ing)

<ul>
<li>This meant that I could send emails, because I had set <code>permit_mynetworks</code> as one of the values under <code>smtpd_recipient_restrictions</code> (i.e., you don&rsquo;t have to authenticate if you&rsquo;ve already ssh&#8217;ed in)</li>
</ul>
</li>
<li>I could connect to port 25 using <code>s_client</code> and initiate a STARTTLS command <strong>from my server</strong>

<ul>
<li>This was unnecessary, because the server would already accept my request to send emails to foreign recipients (because <code>permit_mynetworks</code> was enabled)</li>
</ul>
</li>
<li>I could still not connect to ports 465 or 587.

<ul>
<li>I got &ldquo;connection refused&rdquo; errors again, but this time the <code>openssl</code> error number was 111.</li>
</ul>
</li>
</ul>


<p><a class="image-link" href="/images/smtp-connection-refused-2.png"><img src="/images/smtp-connection-refused-2.png"></a></p>

<h2>Potential Fixes</h2>

<p>I have a few ideas on why my server won&rsquo;t let me in. I know for sure that it&rsquo;s not a firewall issue; I have all the requisite ports (25/465/587 and 143/993) open.</p>

<p><figure class='code'><figcaption><span>ufw Firewall Settings </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ufw status
</span><span class='line'>Status: active&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>To                         Action      From&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;hr />
</span><span class='line'>
</span><span class='line'>&lt;p>53                         ALLOW       Anywhere
</span><span class='line'>22/tcp                     ALLOW       Anywhere
</span><span class='line'>7                          ALLOW       Anywhere
</span><span class='line'>25/tcp                     ALLOW       Anywhere
</span><span class='line'>143                        ALLOW       Anywhere
</span><span class='line'>465/tcp                    ALLOW       Anywhere
</span><span class='line'>993                        ALLOW       Anywhere
</span><span class='line'>587/tcp                    ALLOW       Anywhere
</span><span class='line'>53                         ALLOW       Anywhere (v6)
</span><span class='line'>22/tcp                     ALLOW       Anywhere (v6)
</span><span class='line'>7                          ALLOW       Anywhere (v6)
</span><span class='line'>25/tcp                     ALLOW       Anywhere (v6)
</span><span class='line'>143                        ALLOW       Anywhere (v6)
</span><span class='line'>465/tcp                    ALLOW       Anywhere (v6)
</span><span class='line'>993                        ALLOW       Anywhere (v6)
</span><span class='line'>587/tcp                    ALLOW       Anywhere (v6)</span></code></pre></td></tr></table></div></figure></p>

<p>It could be an issue with my certificates. Because I&rsquo;m cheap and didn&rsquo;t want to pay excessive amounts of money for a fun summer experiment, I decided to self-sign my SSL certificates. (This means that while my traffic will be encrypted, people who try to connect to my server can&rsquo;t necessarily trust that I am who I say I am. It&rsquo;s the same reason why we have notaries to verify our signatures.) I&rsquo;m skeptical that this could be the reason, though, because nothing was showing up in the logs. If it had been a certificate error, it would have almost certainly shown up in the logs at some point.</p>

<p>Every error message that I got said the same thing: connection refused. But it only said connection refused on ports 465 and 587, ports that are expecting to receive communication over an encrypted channel. This means one of two things: my firewall is blocking the connection, which I&rsquo;ve already ruled out, or some other middle-man is kicking me out before we even get to Postfix, where something would show up in the logs.</p>

<p>I have a feeling that this could have something to do with the way my DNS is configured. As it stands, I have an A record on my <code>@</code> domain pointing to the IP address for GitHub pages, because <a href="http://zimmerman.io">zimmerman.io</a> is where I am hosting my personal site. However, I have a CNAME redirect which points <code>mail.zimmerman.io</code> to <code>metagross.zimmerman.io</code>, which is an A record linking to my droplet&rsquo;s IP address. I also have an MX record set up on the <code>@</code> domain, so that all mail directed to &ldquo;@zimmerman.io&rdquo; is sent to <code>mail.zimmerman.io</code>.</p>

<p><strong>UPDATE</strong>: After I wrote this post, I switched to the domain jez.io for all of my static site hosting. The links above should continue to work for a while, but at some point they might die.
<br></p>

<p><a class="image-link" href="/images/mail-dns-1.png"><img src="/images/mail-dns-1.png"></a></p>

<p><br>
I think that the confusion is in the multiple uses of the <code>@</code> domain. Taking a scrutinous look at the differences between my setup and the <a href="http://sealedabstract.com/code/nsa-proof-your-e-mail-in-2-hours/">tutorial</a> I&rsquo;ve been working out of, the one glaring difference is that his mail is set up on a subdomain whereas I wanted my mail to be set up on the apex domain. I thought that I made the necessary changes to my setup to get this to work, but now I&rsquo;m not so sure.</p>

<p>It&rsquo;s also quite possible that I&rsquo;m completely off the mark with this diagnosis. The world of mail servers is a murky place; certainly one that I don&rsquo;t understand that well after only two weeks. But it has been a very rewarding experience so far, and I&rsquo;d like to see if I can&rsquo;t fix this issue.</p>

<p>- - - - -
<br>
### Jake on the Web
<a class="image-link" href="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg"><img class="left" src="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg" width="135" height="135"></a>
If you cared enough to read that far, you should consider following me on
[GitHub][g] or paying a visit to [my homepage][h]. If this post was about one of
my open source projects, make sure to star it on GitHub! I love hearing what
people think, so feel free to comment, open an issue, or send me an email.
 [g]: https://www.github.com/jez/
 [h]: https://jez.io/
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running a VPS, Log 3: A Mail Server That Works... Kind Of.]]></title>
    <link href="https://blog.jez.io/2014/07/04/running-a-vps-log-3/"/>
    <updated>2014-07-04T14:11:14-04:00</updated>
    <id>https://blog.jez.io/2014/07/04/running-a-vps-log-3</id>
    <content type="html"><![CDATA[<p>After some initial troubles, I finally managed to get basic send and receive functionality  working on my mail server, using EncFS, Dovecot, and Postfix. That being said, it&rsquo;s <em>far</em> from a perfect system, and it needs a good deal more TLC to get it working at a level that&rsquo;s on par with a more &ldquo;professional&rdquo; email service provider. This post details some fixes that I&rsquo;ve implemented so far, as well as the functionality that I&rsquo;ve managed to get working.</p>

<!-- more -->


<h2>EncFS Troubles Revisited</h2>

<p>I mentioned in my <a href="/2014/06/24/running-a-vps-log-2">last log</a> that I had somehow managed to botch my first mail server-related endeavor: installing EncFS, a program for creating encrypted file systems. The way it&rsquo;s supposed to work is depicted below:</p>

<p><a class="image-link" href="/images/encfs.svg"><img src="/images/encfs.svg"></a></p>

<p>Emails originating elsewhere are transfered over the internet to my server according to the DNS settings we&rsquo;ve put in place. These emails need to be stored somewhere upon their receipt; ideally, somewhere encrypted. Thus, the goal is to set up an encrypted file system in user space, such that each incoming email is first stored in <code>/decrypted-mail/</code>, and then is automatically encrypted and stored in <code>/encrypted-mail/</code>. (<strong>Note</strong>: this is not quite how the encryption process works. For more information, you should check out the <a href="https://wiki.archlinux.org/index.php/EncFS">Arch Wiki</a> page on EncFS.)</p>

<p>There are some disadvantages to this type of encryption, most notably that it leaks information about the file system itself. However, as was mentioned in the comments on the <a href="http://sealedabstract.com/code/nsa-proof-your-e-mail-in-2-hours/">tutorial I&rsquo;m working from</a>, &ldquo;if the host/harddisk is given to authorities they cannot decrypt it and thus cannot access your e-mails,&rdquo; which is good enough for me.</p>

<h3>Upgrading the Kernel</h3>

<p>After following the instructions from the tutorial perfectly, <em>and</em> repeating them after having restored from a clean backup, EncFS refused to work. Luckily, I found this <a href="https://github.com/al3x/sovereign/issues/147#issuecomment-43849647">GitHub issue</a> detailing the source of the problem as well as a simple fix for it.</p>

<p>Apparently, my issue was that DigitalOcean doesn&rsquo;t initialize freshly created Debian 7 droplets with the most recent kernel. Unfortunately libfuse, a library used by EncFS to create and manage the encrypted file system, was expecting a more up-to-date kernel version.</p>

<p>Upgrading my kernel version was just a few steps, though. I had to run
<figure class='code'><figcaption><span>Upgrade Kernel </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo apt-get update
</span><span class='line'><span class="nv">$ </span>sudp apt-get upgrade
</span></code></pre></td></tr></table></div></figure>
to update the list of downloaded kernels, then
<figure class='code'><figcaption><span>Restart </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo shutdown -h now
</span></code></pre></td></tr></table></div></figure>
to tell the server to shutdown and power off. Next up is to switch over the kernel version on the <a href="https://www.digitalocean.com/community/tutorials/how-to-update-a-digitalocean-server-s-kernel-using-the-control-panel">DigitalOcean control panel</a>. All in all, nothing too difficult: the hardest part was that I never expected my problem to have anything to do with DigitalOcean.</p>

<h2>Postfix &amp; Dovecot</h2>

<p>With EncFS finally up and running, I moved on to getting the basic send and receive functionality implemented. For the most part, this process was straight-forward, and is outlined (albeit very scarcely) <a href="http://sealedabstract.com/code/nsa-proof-your-e-mail-in-2-hours/">here</a>.</p>

<p>Then suddenly, the tutorial proclaimed, &ldquo;At this point, it should basically work. You should be able to send and receive mail.&rdquo; I was pretty surprised: I had no idea how to actually go about testing my setup! It simply did not list any way of doing this. It turns out, there are basically three ways to establish a connection with the mail server; I&rsquo;ll discuss the first here, and the others in a [future post][/2014/06/24/running-a-vps-log-4] on troubleshooting problems with my setup.</p>

<h3>Mail Client</h3>

<p>For the true hackers who don&rsquo;t make mistakes and set up their systems perfectly on their first try, simply launching a desktop or mobile mail client and configuring a few account settings, should be enough. Since I&rsquo;m developing on a Mac and was too lazy to install a fancier, potentially more feature-rich client, I&rsquo;m using Mail.app.</p>

<p>A series of dialogs should drive the process of setting up a new user account. My Mail.app setup is shown below.</p>

<p><a class="image-link" href="/images/imap-settings.png"><img src="/images/imap-settings.png"></a></p>

<p>IMAP on my setup works fine, so I&rsquo;ll give some pointers about setting it up correctly:</p>

<ul>
<li><strong>Email Address</strong> or <strong>Username</strong>: Fields that ask for this information should always include a full email address&ndash;in my case <code>jake@zimmerman.io</code>. This is because our MySQL server is configured to store the full address, so Dovecot needs a full address to use to for IMAP authentication.</li>
<li><strong>Password</strong>: This is the password coupled with the email address referenced above, which was SHA512-hashed and stored in the database.</li>
<li><strong>Incoming</strong> or <strong>IMAP Mail Server</strong>: Whatever is in this field needs to eventually resolve to the IP address of our IMAP server. Simply putting the server&rsquo;s IP address directly into this field will suffice. To be more sophisticated though, we&rsquo;ll want to configure this field with a domain name and let our client resolve it, as this is more robust. There are a few ways this can be done; to give a quick overview, you can either set up

<ul>
<li>a CNAME record which resolves to the mail server&rsquo;s IP.</li>
<li>an MX record on the <code>@</code> or apex domain which resolves to the mail server&rsquo;s IP. (This is the option depicted in the screenshot above).</li>
<li>an A record which resolves directly to the mail server&rsquo;s IP.</li>
</ul>
</li>
<li><strong>Port</strong>: 993. We&rsquo;ve configured our server to use SSL to connect over IMAPS, which runs by default over port 993. Be sure to check &ldquo;Use SSL&rdquo; if such an option is available.</li>
</ul>


<p>As far as SMTP goes, this is where my setup starts breaking. I&rsquo;ll come back to why exactly it&rsquo;s failing in more detail <a href="/2014/07/05/running-a-vps-log-4">here</a>, but for now, know that I had to change the line <code>smtpd_tls_auth_only = yes</code> in <code>/etc/postfix/main.cf</code> to <code>... = no</code>, to even get things to work. With this line enabled, credentials are sent over the wire in plain text. Sadly, crypto is hard, and this is the only thing that I have done to manage to get it working.</p>

<p>At this point I could connect to the server &ldquo;zimmerman.io&rdquo; on port 25 using my email with the <em>same</em> password from above. As a side note, this form of authentication is pretty nifty. If you noticed, we&rsquo;re using the same password on IMAP with Dovecot and on SMTP with Postfix. Using the SASL protocol, Postfix can pass on the user&rsquo;s credentials to Dovecot, which then uses its connection to the database to confirm or deny the request for authentication. For a simple, one-user setup, this is a rather elegant solution.</p>

<h2>Debugging a Broken Mail Server</h2>

<p>With SSL authentication turned off, I was able to get Mail.app to send and receive emails. Additionally, I could do the same using the third-party Android client myMail. For whatever reason, the default Android client wouldn&rsquo;t even accept my IMAP login, whereas myMail was smart enough to log me after only asking for my email and password.</p>

<p>Ideally, I&rsquo;d like to have a setup where my password isn&rsquo;t being sent in a format anyone can read. To debug some of these close-to-the-system settings, there are a bunch of <a href="/2014/07/05/running-a-vps-log-4">command line tools</a> which help to inspect exactly what&rsquo;s going wrong with the system.</p>

<p>- - - - -
<br>
### Jake on the Web
<a class="image-link" href="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg"><img class="left" src="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg" width="135" height="135"></a>
If you cared enough to read that far, you should consider following me on
[GitHub][g] or paying a visit to [my homepage][h]. If this post was about one of
my open source projects, make sure to star it on GitHub! I love hearing what
people think, so feel free to comment, open an issue, or send me an email.
 [g]: https://www.github.com/jez/
 [h]: https://jez.io/
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running a VPS, Log 2: Seriously, Back It Up]]></title>
    <link href="https://blog.jez.io/2014/06/24/running-a-vps-log-2/"/>
    <updated>2014-06-24T23:11:14-04:00</updated>
    <id>https://blog.jez.io/2014/06/24/running-a-vps-log-2</id>
    <content type="html"><![CDATA[<p>I don&rsquo;t have the best track record with configuring servers. I&rsquo;ve certainly brought down a ScottyLabs server or two before, but sometimes there&rsquo;s no avoiding that in the sake of learning. At times like these, you&rsquo;ve just gotta reboot and try again. With DigitalOcean&rsquo;s auto-backups though, this process is incredibly easy.</p>

<!-- more -->


<h2>EncFS Troubles</h2>

<p>As part of my eventual goal of hosting my own mail, I tried following <a href="//sealedabstract.com/code/nsa-proof-your-e-mail-in-2-hours/">this post</a> to set up a mail server on my VPS. Unfortunately, I never even made it out the gates. The first step is to install and set up EncFS for letting you mount encrypted filesystems, which the tutorial was planning on using to store email securely. Unfortunately, after following the steps listed to a T, my poor VPS whined and complained about being misconfigured.</p>

<p><strong>Edit</strong>: After doing a little more research, I found that the root of my issue wasn&rsquo;t something I had been doing. Apparently, you have to <a href="https://www.digitalocean.com/community/tutorials/how-to-update-a-digitalocean-server-s-kernel-using-the-control-panel">manually update the kernel</a> through the DigitalOcean web console. You can read more about it on this <a href="https://github.com/al3x/sovereign/issues/147#issuecomment-43849647">GitHub issue</a>.</p>

<p>Regardless, my first attempt to do something cool on this new VPS was a dud. All I had to show for it was a muddled, no-longer-pristine VPS with some packages and libraries that simply didn&rsquo;t work. If I were to continue with the tutorial by skipping this step, I would have never known whether the cause of any future issue was something misconfigured at this step.</p>

<h2>The Day is Saved</h2>

<p>But then I remembered: DigitalOcean is automatically backing up my droplet! After logging into the web interface, all I had to do was click a button and my whole system was reset to the way it looked 24 hours prior. It was <em>actually that easy</em>.</p>

<p>Thus, for anyone getting started with a new server, whether it be on DigitalOcean or any other service (even a box you have running in your room), I cannot stress enough the value of automatic&ndash;or at least regular&ndash;backups. Not only is this a good idea to preserve data in the event of an outage, but it lends a seemingly unbounded ability to mess around and tinker.</p>

<p>What this means is that you get all the fun of learning cool, new Linux-y things, but without ever having to worry about whether you&rsquo;ll break the whole system. Sure, this mindset isn&rsquo;t necessarily the best to adopt for a production machine, but for my circumstances, all I want is free reign to experiment and break things to my heart&rsquo;s content.</p>

<h2>Back to Square One</h2>

<p>With my first attempt at installing a mail server foiled, I think for my next attempt I&rsquo;ll try a different path. Instead of installing and configuring everything more or less manually (I really wanted to do this for the experience of it all, learning the nitty-gritty of how it works), this time around I think I&rsquo;m going to give <a href="https://github.com/al3x/sovereign">sovereign</a> a try. I&rsquo;ve heard good things, and it is in fact based on the original tutorial I had found, so it&rsquo;s looking pretty promising as of yet.</p>

<p>Whatever happens though, I&rsquo;m feeling pretty good about the fact that I can turn things around with a single click.</p>

<p>- - - - -
<br>
### Jake on the Web
<a class="image-link" href="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg"><img class="left" src="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg" width="135" height="135"></a>
If you cared enough to read that far, you should consider following me on
[GitHub][g] or paying a visit to [my homepage][h]. If this post was about one of
my open source projects, make sure to star it on GitHub! I love hearing what
people think, so feel free to comment, open an issue, or send me an email.
 [g]: https://www.github.com/jez/
 [h]: https://jez.io/
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running a VPS, Log 1: Managing Dotfiles Across Machines]]></title>
    <link href="https://blog.jez.io/2014/06/19/running-a-vps-log-1/"/>
    <updated>2014-06-19T23:10:51-04:00</updated>
    <id>https://blog.jez.io/2014/06/19/running-a-vps-log-1</id>
    <content type="html"><![CDATA[<p>You could say I&rsquo;m a bit of a geek when it comes to configuring my terminal environment; this obsession has led me to concoct ever-elaborate setup scripts and configuration files. On top of this, between my laptop&rsquo;s multiple boot environments, the servers I use for school, work, and ScottyLabs, and now <a href="/2014/06/19/running-a-vps-log-0">metagross</a>, keeping my configuration files in sync is a must. I handle it swiftly using a combination of git and rcm.</p>

<!-- more -->


<h2>My Scripts</h2>

<p>I&rsquo;ve put a decent amount of time into my dotfiles. I like to think they&rsquo;re pretty good. That being said, I&rsquo;m not about to go over every piece of them, because that would bore even me. I might come back to these pieces in a series on getting started with the terminal (aimed at incoming CS freshmen and other up-and-coming hackers), but for now, a link will suffice.</p>

<h4><a href="https://github.com/jez/dotfiles/">jez/dotfiles</a></h4>

<h2>rcm + git</h2>

<p>rcm, short for rc file (as in .bash<b>rc</b>, .vim<b>rc</b>) management, is a tool that manages symlinks between dotfiles in one directory and your home directory. This is cool because, once all your config files contained in one folder, they can be tracked with git for version control without having to put your entire <code>$HOME</code> directory inside a git repo.</p>

<p>On a single machine, rcm works like this. You have one directory (usually <code>~/.dotfiles</code>, but configurable to any directory) which stores all the config files. In here, all files which are meant to be tracked and symlinked do <em>not</em> include the prefixed &lsquo;<code>.</code>&rsquo;; instead, it is added as part of the linking process. After installation, which is easily handled through the brew formula, the .deb, or the Makefile, there are a couple of new tools available.</p>

<p>The first worth mentioning is <code>man 7 rcm</code>, which documents what was just installed. Taking a glance at this page, we see that rcm is actually a suite of tools: <code>lsrc</code>, <code>mkrc</code>, <code>rcdn</code>, and <code>rcup</code>. While all these tools are useful, the most important is <code>rcup</code>. After collecting all your dotfiles into <code>~/.dotfiles</code>, simply executing <code>rcup</code> symlinks all the necessary files to their appropriate locations.</p>

<p>From here, you get all the benefits of git, like pushing to GitHub, collaborating with others, lightweight branching, and syncing files easily even when your workflow is distributed across many servers.</p>

<h2>Caveats</h2>

<p>To be fair, I don&rsquo;t use <code>rcm</code> in the way I think it&rsquo;s creators imagined it would be used. Specifically, the software includes certain provisions to designate which files should affect various machines using a tag system. While it could possibly work, in my mind it&rsquo;s much more tedious than what I&rsquo;ve come up with.</p>

<p>Succinctly, the issue is this: when cloning a repo and running <code>rcup</code> for the first time, you can&rsquo;t easily say &ldquo;this is my VPS, it&rsquo;s running Debian GNU/Linux, has these system binaries installed, and therefore should start up using these methods and scripts&rdquo;. For this, we&rsquo;re on our own.</p>

<h2>Installation</h2>

<p>The solution I came up with regarding a multiple-environment workflow deals with handling all the necessary machine-dependent configuration within my dotfiles <em>themselves</em>. That way I can minimize code reuse and have everything in one convenient file. As a result, <a href="https://github.com/jez/dotfiles/tree/master/bash_profile">my bash_profile</a> is a bit lengthy at about 300 lines, and it has three large case statements, but I make all this up through deployment. Deployment is <strong>incredibly</strong> swift. Again, You can take a look at the file to see how it works, but when I had finished <a href="/2014/06/19/running-a-vps-log-1">locking down my server</a>, these are the only configuration commands I had to run:</p>

<p><figure class='code'><figcaption><span>Installing rcm and dotfiles </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;install rcm using deb and dpkg&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>wget &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://thoughtbot.github.io/rcm/debs/rcm_1.2.3-1_all.deb&quot;</span>&gt;https://thoughtbot.github.io/rcm/debs/rcm_1.2.3-1_all.deb&lt;/a&gt;
</span><span class='line'><span class="nv">$ </span>sudo dpkg -i rcm_1.2.3-1_all.deb&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;clone dotfiles down, into the ~/.dotfiles directory&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>git clone &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;https://github.com/jez/dotfiles&quot;</span>&gt;https://github.com/jez/dotfiles&lt;/a&gt; ~/.dotfiles&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;make the symlinks&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>rcup
</span></code></pre></td></tr></table></div></figure></p>

<p>Voilà! After that, I had my sick bash prompt, my <a href="/2014/06/11/update-your-software-its-the-law/">snazzy update function</a>, my delightful vim colorscheme, solarized dir colors&ndash;the list goes on and on.</p>

<p>Sure, it&rsquo;s taken a bit of effort to get the point where I can run these commands and have it Just Work, but doing that work once means that from now on, whenever I sit down at a new work computer, a new VPS, a new laptop, or some other workstation, I&rsquo;m only a few commands away from my favorite settings.</p>

<p>- - - - -
<br>
### Jake on the Web
<a class="image-link" href="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg"><img class="left" src="https://pbs.twimg.com/profile_images/463467877593407488/hfwJj20L.jpeg" width="135" height="135"></a>
If you cared enough to read that far, you should consider following me on
[GitHub][g] or paying a visit to [my homepage][h]. If this post was about one of
my open source projects, make sure to star it on GitHub! I love hearing what
people think, so feel free to comment, open an issue, or send me an email.
 [g]: https://www.github.com/jez/
 [h]: https://jez.io/
</p>
]]></content>
  </entry>
  
</feed>
